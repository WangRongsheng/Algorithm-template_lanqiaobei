//dfs与bfs

int dfs(){
	for (int i = 1; i <= 宽度; i++){
		if (满足条件){
			报存结果
			if (到达目的地) 输出解
			else dfs(k + 1); //搜索下一层 
			//恢复：保留结果之前的状态{回溯} 
	}
} 

int dfs(){
	if (到目的地) 输出解;
	else
		for (int i = 1; i <= 算符种类; i++){
			if (满足条件){
				保存结果
				dfs(k + 1);
				恢复：保存结果之前的状态 
			} 
		} 
}

//dfs注意事项：1.迷宫问题：一般就是参数给的是深度，而for循环用来遍历宽度
			   //2. 抽象dfs：参数根据题目要求来 、



//bfs由于他的宽搜特点所以他基本就是用来解决最短路问题，是用来解决无环，权值都相同的图
//大家不要与后面的最短路算法的用途搞混啊
 
//bfs这里没啥特殊的模板 ，就是要用到队列，这里我就先不写了 
void bfs(){
	queue<int> q; //这里定义一个队列，bfs就是用队列实现的 
	st[1] = true; // 表示 1 号点已经被遍历过 
	q.push(1);
	while(q.size()){
		//逻辑部分 
	}
	...
} 
