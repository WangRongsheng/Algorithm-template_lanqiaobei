//并查集

//作用：1.将两个集合合并
//      2.询问两个集合是否在一个集合中

//基本原理：每个集合用一棵树来表示，树根的编号就是整个集合的编号， 每个结点存他的父节点，p[x]表示x的父节点

//注：用树的形式来维护，不一定是二叉树

//在find()查找函数里运用了路径压缩，降低了时间复杂度

//find()函数作用是找到祖宗结点 
int find(int x){
	if (p[x] != x) p[x] = find(p[x]) //这里运用了递归，如果不是父结点就一直往上找，直到找到他的父结点
	return p[x]; 
} 

//初始化，假定结点编号是1 - n
for (int i = 1; i <= n; i++){
	p[i] = i;
} 

//合并a 和 b所在的两个集合
p[find(a)] = find(b); //另a的父结点等于b的父节点，就可以把两个树连接起来

//注：
	1.if (p[x] == x) , 则为树根
	2.求x的集合编号：while (p[x] != x) x = p[x]; //这里p[x]就存的是x的祖宗结点 
	3.合并两个集合， p[x] = y; 
